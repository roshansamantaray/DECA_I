<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="test.exercises.Exercise2Test" time="0.075" tests="7" errors="2" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="23"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\rosha\OneDrive - Universität Paderborn\College\Universität Paderborn\Tutorials\DECA-01\DECALab3\DECALab3-SootUp\target\test-classes;C:\Users\rosha\OneDrive - Universität Paderborn\College\Universität Paderborn\Tutorials\DECA-01\DECALab3\DECALab3-SootUp\target\classes;C:\Users\rosha\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\rosha\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.core\1.3.0\sootup.core-1.3.0.jar;C:\Users\rosha\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\rosha\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\rosha\.m2\repository\org\slf4j\slf4j-api\2.0.5\slf4j-api-2.0.5.jar;C:\Users\rosha\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\rosha\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\rosha\.m2\repository\com\google\guava\guava\32.0.1-jre\guava-32.0.1-jre.jar;C:\Users\rosha\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\rosha\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\rosha\.m2\repository\org\checkerframework\checker-qual\3.33.0\checker-qual-3.33.0.jar;C:\Users\rosha\.m2\repository\com\google\errorprone\error_prone_annotations\2.18.0\error_prone_annotations-2.18.0.jar;C:\Users\rosha\.m2\repository\com\google\j2objc\j2objc-annotations\2.8\j2objc-annotations-2.8.jar;C:\Users\rosha\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.java.core\1.3.0\sootup.java.core-1.3.0.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.java.bytecode\1.3.0\sootup.java.bytecode-1.3.0.jar;C:\Users\rosha\.m2\repository\org\ow2\asm\asm-util\9.5\asm-util-9.5.jar;C:\Users\rosha\.m2\repository\org\ow2\asm\asm\9.5\asm-9.5.jar;C:\Users\rosha\.m2\repository\org\ow2\asm\asm-tree\9.5\asm-tree-9.5.jar;C:\Users\rosha\.m2\repository\org\ow2\asm\asm-analysis\9.5\asm-analysis-9.5.jar;C:\Users\rosha\.m2\repository\org\ow2\asm\asm-commons\9.5\asm-commons-9.5.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex2jar\2.4.16\dex2jar-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\d2j-base-cmd\2.4.16\d2j-base-cmd-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\d2j-external\2.4.16\d2j-external-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\d2j-jasmin\2.4.16\d2j-jasmin-2.4.16.jar;C:\Users\rosha\.m2\repository\org\antlr\antlr-runtime\3.5.3\antlr-runtime-3.5.3.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\d2j-smali\2.4.16\d2j-smali-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-ir\2.4.16\dex-ir-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-reader\2.4.16\dex-reader-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-reader-api\2.4.16\dex-reader-api-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-tools\2.4.16\dex-tools-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-translator\2.4.16\dex-translator-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-writer\2.4.16\dex-writer-2.4.16.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.analysis\1.3.0\sootup.analysis-1.3.0.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.callgraph\1.3.0\sootup.callgraph-1.3.0.jar;C:\Users\rosha\.m2\repository\de\upb\cs\swt\heros\1.2.3\heros-1.2.3.jar;C:\Users\rosha\.m2\repository\org\functionaljava\functionaljava\4.2\functionaljava-4.2.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.jimple.parser\1.3.0\sootup.jimple.parser-1.3.0.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.java.sourcecode\1.3.0\sootup.java.sourcecode-1.3.0.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.core\1.5.9\com.ibm.wala.core-1.5.9.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.cast\1.5.9\com.ibm.wala.cast-1.5.9.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.cast.java\1.5.9\com.ibm.wala.cast.java-1.5.9.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.cast.java.ecj\1.5.9\com.ibm.wala.cast.java.ecj-1.5.9.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.runtime\3.17.100\org.eclipse.core.runtime-3.17.100.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.osgi\3.14.0\org.eclipse.osgi-3.14.0.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.equinox.common\3.14.100\org.eclipse.equinox.common-3.14.100.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.jobs\3.9.3\org.eclipse.core.jobs-3.9.3.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.equinox.registry\3.11.200\org.eclipse.equinox.registry-3.11.200.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.equinox.preferences\3.9.100\org.eclipse.equinox.preferences-3.9.100.jar;C:\Users\rosha\.m2\repository\org\osgi\org.osgi.service.prefs\1.1.2\org.osgi.service.prefs-1.1.2.jar;C:\Users\rosha\.m2\repository\org\osgi\osgi.annotation\8.0.1\osgi.annotation-8.0.1.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.contenttype\3.7.1000\org.eclipse.core.contenttype-3.7.1000.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.equinox.app\1.6.200\org.eclipse.equinox.app-1.6.200.jar;C:\Users\rosha\.m2\repository\org\eclipse\jdt\org.eclipse.jdt.core\3.14.0\org.eclipse.jdt.core-3.14.0.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.resources\3.14.0\org.eclipse.core.resources-3.14.0.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.expressions\3.8.200\org.eclipse.core.expressions-3.8.200.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.filesystem\1.9.500\org.eclipse.core.filesystem-1.9.500.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.text\3.12.300\org.eclipse.text-3.12.300.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.commands\3.9.700\org.eclipse.core.commands-3.9.700.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.util\1.5.9\com.ibm.wala.util-1.5.9.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.shrike\1.5.9\com.ibm.wala.shrike-1.5.9.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.dalvik\1.5.9\com.ibm.wala.dalvik-1.5.9.jar;C:\Users\rosha\.m2\repository\org\smali\dexlib2\2.5.2\dexlib2-2.5.2.jar;C:\Users\rosha\.m2\repository\org\antlr\antlr4-runtime\4.9.3\antlr4-runtime-4.9.3.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="user.country.format" value="DE"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="23"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="GB"/>
    <property name="sun.boot.library.path" value="C:\Users\rosha\.jdks\openjdk-23.0.1\bin"/>
    <property name="sun.java.command" value="C:\Users\rosha\AppData\Local\Temp\surefire16056321195581729326\surefirebooter-20250119175445119_3.jar C:\Users\rosha\AppData\Local\Temp\surefire16056321195581729326 2025-01-19T17-54-45_034-jvmRun1 surefire-20250119175445119_1tmp surefire_0-20250119175445119_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\rosha\OneDrive - Universität Paderborn\College\Universität Paderborn\Tutorials\DECA-01\DECALab3\DECALab3-SootUp\target\test-classes;C:\Users\rosha\OneDrive - Universität Paderborn\College\Universität Paderborn\Tutorials\DECA-01\DECALab3\DECALab3-SootUp\target\classes;C:\Users\rosha\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\rosha\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.core\1.3.0\sootup.core-1.3.0.jar;C:\Users\rosha\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\rosha\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\rosha\.m2\repository\org\slf4j\slf4j-api\2.0.5\slf4j-api-2.0.5.jar;C:\Users\rosha\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\rosha\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\rosha\.m2\repository\com\google\guava\guava\32.0.1-jre\guava-32.0.1-jre.jar;C:\Users\rosha\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\rosha\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\rosha\.m2\repository\org\checkerframework\checker-qual\3.33.0\checker-qual-3.33.0.jar;C:\Users\rosha\.m2\repository\com\google\errorprone\error_prone_annotations\2.18.0\error_prone_annotations-2.18.0.jar;C:\Users\rosha\.m2\repository\com\google\j2objc\j2objc-annotations\2.8\j2objc-annotations-2.8.jar;C:\Users\rosha\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.java.core\1.3.0\sootup.java.core-1.3.0.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.java.bytecode\1.3.0\sootup.java.bytecode-1.3.0.jar;C:\Users\rosha\.m2\repository\org\ow2\asm\asm-util\9.5\asm-util-9.5.jar;C:\Users\rosha\.m2\repository\org\ow2\asm\asm\9.5\asm-9.5.jar;C:\Users\rosha\.m2\repository\org\ow2\asm\asm-tree\9.5\asm-tree-9.5.jar;C:\Users\rosha\.m2\repository\org\ow2\asm\asm-analysis\9.5\asm-analysis-9.5.jar;C:\Users\rosha\.m2\repository\org\ow2\asm\asm-commons\9.5\asm-commons-9.5.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex2jar\2.4.16\dex2jar-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\d2j-base-cmd\2.4.16\d2j-base-cmd-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\d2j-external\2.4.16\d2j-external-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\d2j-jasmin\2.4.16\d2j-jasmin-2.4.16.jar;C:\Users\rosha\.m2\repository\org\antlr\antlr-runtime\3.5.3\antlr-runtime-3.5.3.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\d2j-smali\2.4.16\d2j-smali-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-ir\2.4.16\dex-ir-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-reader\2.4.16\dex-reader-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-reader-api\2.4.16\dex-reader-api-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-tools\2.4.16\dex-tools-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-translator\2.4.16\dex-translator-2.4.16.jar;C:\Users\rosha\.m2\repository\de\femtopedia\dex2jar\dex-writer\2.4.16\dex-writer-2.4.16.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.analysis\1.3.0\sootup.analysis-1.3.0.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.callgraph\1.3.0\sootup.callgraph-1.3.0.jar;C:\Users\rosha\.m2\repository\de\upb\cs\swt\heros\1.2.3\heros-1.2.3.jar;C:\Users\rosha\.m2\repository\org\functionaljava\functionaljava\4.2\functionaljava-4.2.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.jimple.parser\1.3.0\sootup.jimple.parser-1.3.0.jar;C:\Users\rosha\.m2\repository\org\soot-oss\sootup.java.sourcecode\1.3.0\sootup.java.sourcecode-1.3.0.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.core\1.5.9\com.ibm.wala.core-1.5.9.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.cast\1.5.9\com.ibm.wala.cast-1.5.9.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.cast.java\1.5.9\com.ibm.wala.cast.java-1.5.9.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.cast.java.ecj\1.5.9\com.ibm.wala.cast.java.ecj-1.5.9.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.runtime\3.17.100\org.eclipse.core.runtime-3.17.100.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.osgi\3.14.0\org.eclipse.osgi-3.14.0.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.equinox.common\3.14.100\org.eclipse.equinox.common-3.14.100.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.jobs\3.9.3\org.eclipse.core.jobs-3.9.3.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.equinox.registry\3.11.200\org.eclipse.equinox.registry-3.11.200.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.equinox.preferences\3.9.100\org.eclipse.equinox.preferences-3.9.100.jar;C:\Users\rosha\.m2\repository\org\osgi\org.osgi.service.prefs\1.1.2\org.osgi.service.prefs-1.1.2.jar;C:\Users\rosha\.m2\repository\org\osgi\osgi.annotation\8.0.1\osgi.annotation-8.0.1.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.contenttype\3.7.1000\org.eclipse.core.contenttype-3.7.1000.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.equinox.app\1.6.200\org.eclipse.equinox.app-1.6.200.jar;C:\Users\rosha\.m2\repository\org\eclipse\jdt\org.eclipse.jdt.core\3.14.0\org.eclipse.jdt.core-3.14.0.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.resources\3.14.0\org.eclipse.core.resources-3.14.0.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.expressions\3.8.200\org.eclipse.core.expressions-3.8.200.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.filesystem\1.9.500\org.eclipse.core.filesystem-1.9.500.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.text\3.12.300\org.eclipse.text-3.12.300.jar;C:\Users\rosha\.m2\repository\org\eclipse\platform\org.eclipse.core.commands\3.9.700\org.eclipse.core.commands-3.9.700.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.util\1.5.9\com.ibm.wala.util-1.5.9.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.shrike\1.5.9\com.ibm.wala.shrike-1.5.9.jar;C:\Users\rosha\.m2\repository\com\ibm\wala\com.ibm.wala.dalvik\1.5.9\com.ibm.wala.dalvik-1.5.9.jar;C:\Users\rosha\.m2\repository\org\smali\dexlib2\2.5.2\dexlib2-2.5.2.jar;C:\Users\rosha\.m2\repository\org\antlr\antlr4-runtime\4.9.3\antlr4-runtime-4.9.3.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\rosha"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="C:\Users\rosha\.jdks\openjdk-23.0.1"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\rosha\OneDrive - Universität Paderborn\College\Universität Paderborn\Tutorials\DECA-01\DECALab3\DECALab3-SootUp"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\rosha\AppData\Local\Temp\surefire16056321195581729326\surefirebooter-20250119175445119_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="23.0.1+11-39"/>
    <property name="user.name" value="rosha"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\rosha\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\rosha\AppData\Local\Temp\"/>
    <property name="idea.version" value="2024.3.2"/>
    <property name="java.version" value="23.0.1"/>
    <property name="user.dir" value="C:\Users\rosha\OneDrive - Universität Paderborn\College\Universität Paderborn\Tutorials\DECA-01\DECALab3\DECALab3-SootUp"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\rosha\.jdks\openjdk-23.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Git\cmd;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Mullvad VPN\resources;C:\Users\rosha\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.1.1\bin;;C:\Users\rosha\AppData\Local\Programs\Microsoft VS Code\bin;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="23.0.1+11-39"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="67.0"/>
  </properties>
  <testcase name="directSQLInjection" classname="test.exercises.Exercise2Test" time="0.0">
    <system-out><![CDATA[Initial Seeds: {this := @this: target.exercise1.DirectSQLInjection=[<ZERO>]}
Method :<target.exercise1.DirectSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) this := @this: target.exercise1.DirectSQLInjection, Fact: <ZERO>
Method :<target.exercise1.DirectSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) request := @parameter0: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) this := @this: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) string := @parameter0: java.lang.String, Fact: <ZERO>
Method :<target.exercise1.DirectSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) userId#0 = virtualinvoke request.<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("userId"), Fact: <ZERO>
Method :<target.exercise1.DirectSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:13) $stack6 = new java.lang.StringBuilder, Fact: <ZERO>
Method :<target.exercise1.DirectSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:13) $stack6 = new java.lang.StringBuilder, Fact: userId#0
Method :<target.exercise1.DirectSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:17) goto, Fact: $stack8
Method :<target.exercise1.DirectSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:17) goto, Fact: <ZERO>
Method :<target.exercise1.DirectSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:17) goto, Fact: userId#0
Method :<target.exercise1.DirectSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:17) goto, Fact: $stack9
Method :<target.exercise1.DirectSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:17) goto, Fact: query
]]></system-out>
  </testcase>
  <testcase name="assignmentSQLInjection" classname="test.exercises.Exercise2Test" time="0.001">
    <system-out><![CDATA[Initial Seeds: {this := @this: target.exercise1.AssignmentSQLInjection=[<ZERO>]}
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:9) this := @this: target.exercise1.AssignmentSQLInjection, Fact: <ZERO>
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:9) request := @parameter0: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) this := @this: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) alias = userId, Fact: <ZERO>
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) string := @parameter0: java.lang.String, Fact: <ZERO>
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) alias = userId, Fact: userId
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:9) userId = virtualinvoke request.<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("userId"), Fact: <ZERO>
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) $stack7 = new java.lang.StringBuilder, Fact: <ZERO>
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) $stack7 = new java.lang.StringBuilder, Fact: userId
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) $stack7 = new java.lang.StringBuilder, Fact: alias
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:18) goto, Fact: $stack10
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:18) goto, Fact: $stack9
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:18) goto, Fact: alias
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:18) goto, Fact: userId
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:18) goto, Fact: <ZERO>
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:18) goto, Fact: query
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:19) $stack11 = <java.lang.System: java.io.PrintStream out>, Fact: <ZERO>
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:19) $stack11 = <java.lang.System: java.io.PrintStream out>, Fact: userId
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:19) $stack11 = <java.lang.System: java.io.PrintStream out>, Fact: $stack9
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:19) $stack11 = <java.lang.System: java.io.PrintStream out>, Fact: alias
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:19) $stack11 = <java.lang.System: java.io.PrintStream out>, Fact: $stack10
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:19) $stack11 = <java.lang.System: java.io.PrintStream out>, Fact: query
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:20) $stack12 = <java.lang.System: java.io.PrintStream out>, Fact: userId
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:20) $stack12 = <java.lang.System: java.io.PrintStream out>, Fact: $stack9
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:20) $stack12 = <java.lang.System: java.io.PrintStream out>, Fact: query
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:20) $stack12 = <java.lang.System: java.io.PrintStream out>, Fact: alias
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:20) $stack12 = <java.lang.System: java.io.PrintStream out>, Fact: $stack10
Method :<target.exercise1.AssignmentSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:20) $stack12 = <java.lang.System: java.io.PrintStream out>, Fact: <ZERO>
]]></system-out>
  </testcase>
  <testcase name="noSQLInjection" classname="test.exercises.Exercise2Test" time="0.007">
    <system-out><![CDATA[Initial Seeds: {this := @this: target.exercise1.NoSQLInjection=[<ZERO>]}
Method :<target.exercise1.NoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:9) this := @this: target.exercise1.NoSQLInjection, Fact: <ZERO>
Method :<target.exercise1.NoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:9) request := @parameter0: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) this := @this: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) string := @parameter0: java.lang.String, Fact: <ZERO>
Method :<target.exercise1.NoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:9) userId = virtualinvoke request.<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("userId"), Fact: <ZERO>
Method :<target.exercise1.NoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:17) goto, Fact: userId
Method :<target.exercise1.NoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:17) goto, Fact: <ZERO>
]]></system-out>
  </testcase>
  <testcase name="interproceduralSQLInjection" classname="test.exercises.Exercise2Test" time="0.014">
    <system-out><![CDATA[Initial Seeds: {this := @this: target.exercise1.InterproceduralSQLInjection=[<ZERO>]}
Method :<target.exercise1.InterproceduralSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:9) this := @this: target.exercise1.InterproceduralSQLInjection, Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:9) request := @parameter0: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) this := @this: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) specialinvoke this.<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>(userId), Fact: userId
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) string := @parameter0: java.lang.String, Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:15) this := @this: target.exercise1.InterproceduralSQLInjection, Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:-1) $stack9 := @caughtexception, Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:9) userId = virtualinvoke request.<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("userId"), Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:15) parameter := @parameter0: java.lang.String, Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:19) conn#1 = $stack9, Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:20) $stack10 = <java.lang.System: java.io.PrintStream out>, Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) specialinvoke this.<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>(userId), Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:17) $stack5 = new java.lang.StringBuilder, Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:21) goto, Fact: <ZERO>
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:15) this := @this: target.exercise1.InterproceduralSQLInjection, Fact: parameter
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:-1) $stack9 := @caughtexception, Fact: parameter
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:19) conn#1 = $stack9, Fact: parameter
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:15) parameter := @parameter0: java.lang.String, Fact: parameter
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:20) $stack10 = <java.lang.System: java.io.PrintStream out>, Fact: parameter
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:17) $stack5 = new java.lang.StringBuilder, Fact: parameter
Method :<target.exercise1.InterproceduralSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) specialinvoke this.<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>(userId), Fact: parameter
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:21) goto, Fact: query
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:21) goto, Fact: parameter
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:21) goto, Fact: $stack8
Method :<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>, Stmt(line:21) goto, Fact: $stack7
Method :<target.exercise1.InterproceduralSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) specialinvoke this.<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>(userId), Fact: query
Method :<target.exercise1.InterproceduralSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) specialinvoke this.<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>(userId), Fact: $stack8
Method :<target.exercise1.InterproceduralSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) specialinvoke this.<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>(userId), Fact: $stack7
Method :<target.exercise1.InterproceduralSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:10) specialinvoke this.<target.exercise1.InterproceduralSQLInjection: void createQuery(java.lang.String)>(userId), Fact: userId
]]></system-out>
  </testcase>
  <testcase name="fieldBasedImpreciseTest" classname="test.exercises.Exercise2Test" time="0.021">
    <error message="Analysis does not contain the fact &apos;FIELDBASED &lt;target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput&gt;&apos;." type="java.util.NoSuchElementException"><![CDATA[java.util.NoSuchElementException: Analysis does not contain the fact 'FIELDBASED <target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput>'.
	at test.base.TestSetup.assertContainsDataFlowFactAtStmt(TestSetup.java:61)
	at test.exercises.Exercise2Test.fieldBasedImpreciseTest(Exercise2Test.java:50)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:316)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:240)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:214)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></error>
    <system-out><![CDATA[Initial Seeds: {this := @this: target.exercise2and3.FieldNoSQLInjection=[<ZERO>]}
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:11) this := @this: target.exercise2and3.FieldNoSQLInjection, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:11) request := @parameter0: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) this := @this: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) $stack5 = new target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) $stack5 = new target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint, Fact: userId
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) string := @parameter0: java.lang.String, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) specialinvoke $stack5.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>(null), Fact: userId
Method :<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>, Stmt(line:30) this := @this: target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) o = $stack5, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:11) userId = virtualinvoke request.<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("userId"), Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) o = $stack5, Fact: userId
Method :<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>, Stmt(line:30) x0 := @parameter0: target.exercise2and3.FieldNoSQLInjection$1, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:13) $stack5.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput> = userId, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>()>, Stmt(line:30) this := @this: target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) specialinvoke $stack5.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>(null), Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) $stack6 = new target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:13) $stack5.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput> = userId, Fact: userId
Method :<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>()>, Stmt(line:31) this.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput> = "noUserInput", Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) $stack6 = new target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint, Fact: FIELDBASED <target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput>
Method :<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>, Stmt(line:30) specialinvoke this.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>()>(), Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) specialinvoke $stack6.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>(null), Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) specialinvoke $stack6.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>(null), Fact: FIELDBASED <target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) $stack6 = new target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint, Fact: userId
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) specialinvoke $stack6.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>(null), Fact: userId
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) o2 = $stack6, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) o2 = $stack6, Fact: FIELDBASED <target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:15) specialinvoke this.<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>($stack6), Fact: FIELDBASED <target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) o2 = $stack6, Fact: userId
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:15) specialinvoke this.<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>($stack6), Fact: userId
Method :<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>, Stmt(line:19) this := @this: target.exercise2and3.FieldNoSQLInjection, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>, Stmt(line:-1) $stack10 := @caughtexception, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>, Stmt(line:19) parameter := @parameter0: target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>, Stmt(line:25) conn#1 = $stack10, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>, Stmt(line:19) loaded = parameter.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput>, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>, Stmt(line:26) $stack11 = <java.lang.System: java.io.PrintStream out>, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:15) specialinvoke this.<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>($stack6), Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>, Stmt(line:23) $stack6 = new java.lang.StringBuilder, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>, Stmt(line:27) goto, Fact: <ZERO>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) specialinvoke $stack6.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>(null), Fact: userId
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) specialinvoke $stack5.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>(null), Fact: userId
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:15) specialinvoke this.<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>($stack6), Fact: userId
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) specialinvoke $stack6.<target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: void <init>(target.exercise2and3.FieldNoSQLInjection$1)>(null), Fact: FIELDBASED <target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput>
Method :<target.exercise2and3.FieldNoSQLInjection: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:15) specialinvoke this.<target.exercise2and3.FieldNoSQLInjection: void createQuery(target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint)>($stack6), Fact: FIELDBASED <target.exercise2and3.FieldNoSQLInjection$ObjectWithTaint: java.lang.String userInput>
]]></system-out>
  </testcase>
  <testcase name="fieldSQLInjection1" classname="test.exercises.Exercise2Test" time="0.015">
    <system-out><![CDATA[Initial Seeds: {this := @this: target.exercise2and3.FieldSQLInjection1=[<ZERO>]}
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:11) this := @this: target.exercise2and3.FieldSQLInjection1, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:11) request := @parameter0: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) this := @this: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) $stack8 = new target.exercise2and3.FieldSQLInjection1$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) $stack8 = new target.exercise2and3.FieldSQLInjection1$ObjectWithTaint, Fact: userId
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) string := @parameter0: java.lang.String, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) specialinvoke $stack8.<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection1$1)>(null), Fact: userId
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:11) userId = virtualinvoke request.<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("userId"), Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection1$1)>, Stmt(line:25) this := @this: target.exercise2and3.FieldSQLInjection1$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) o = $stack8, Fact: userId
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) o = $stack8, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection1$1)>, Stmt(line:25) x0 := @parameter0: target.exercise2and3.FieldSQLInjection1$1, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:13) $stack8.<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: java.lang.String userInput> = userId, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: void <init>()>, Stmt(line:25) this := @this: target.exercise2and3.FieldSQLInjection1$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:13) $stack8.<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: java.lang.String userInput> = userId, Fact: userId
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) specialinvoke $stack8.<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection1$1)>(null), Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) loaded = $stack8.<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: java.lang.String userInput>, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) loaded = $stack8.<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: java.lang.String userInput>, Fact: userId
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) loaded = $stack8.<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: java.lang.String userInput>, Fact: FIELDBASED <target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: java.lang.String userInput>
Method :<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: void <init>()>, Stmt(line:26) this.<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: java.lang.String userInput> = "noUserInput", Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection1$1)>, Stmt(line:25) specialinvoke this.<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: void <init>()>(), Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:18) $stack9 = new java.lang.StringBuilder, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:18) $stack9 = new java.lang.StringBuilder, Fact: loaded
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:18) $stack9 = new java.lang.StringBuilder, Fact: userId
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:18) $stack9 = new java.lang.StringBuilder, Fact: FIELDBASED <target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: java.lang.String userInput>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:22) goto, Fact: $stack11
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:22) goto, Fact: query
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:22) goto, Fact: $stack12
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:22) goto, Fact: loaded
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:22) goto, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:22) goto, Fact: FIELDBASED <target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: java.lang.String userInput>
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:22) goto, Fact: userId
Method :<target.exercise2and3.FieldSQLInjection1: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) specialinvoke $stack8.<target.exercise2and3.FieldSQLInjection1$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection1$1)>(null), Fact: userId
]]></system-out>
  </testcase>
  <testcase name="fieldSQLInjection2" classname="test.exercises.Exercise2Test" time="0.016">
    <error message="Analysis does not contain the fact &apos;FIELDBASED &lt;target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: java.lang.String userInput&gt;&apos;." type="java.util.NoSuchElementException"><![CDATA[java.util.NoSuchElementException: Analysis does not contain the fact 'FIELDBASED <target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: java.lang.String userInput>'.
	at test.base.TestSetup.assertContainsDataFlowFactAtStmt(TestSetup.java:61)
	at test.exercises.Exercise2Test.fieldSQLInjection2(Exercise2Test.java:40)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:316)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:240)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:214)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]></error>
    <system-out><![CDATA[Initial Seeds: {this := @this: target.exercise2and3.FieldSQLInjection2=[<ZERO>]}
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:11) this := @this: target.exercise2and3.FieldSQLInjection2, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:11) request := @parameter0: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) this := @this: target.exercise1.HttpServletRequest, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) $stack4 = new target.exercise2and3.FieldSQLInjection2$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) $stack4 = new target.exercise2and3.FieldSQLInjection2$ObjectWithTaint, Fact: userId
Method :<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>, Stmt(line:6) string := @parameter0: java.lang.String, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) specialinvoke $stack4.<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection2$1)>(null), Fact: userId
Method :<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection2$1)>, Stmt(line:29) this := @this: target.exercise2and3.FieldSQLInjection2$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:11) userId = virtualinvoke request.<target.exercise1.HttpServletRequest: java.lang.String getParameter(java.lang.String)>("userId"), Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) o = $stack4, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) o = $stack4, Fact: userId
Method :<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection2$1)>, Stmt(line:29) x0 := @parameter0: target.exercise2and3.FieldSQLInjection2$1, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:13) $stack4.<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: java.lang.String userInput> = userId, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: void <init>()>, Stmt(line:29) this := @this: target.exercise2and3.FieldSQLInjection2$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) specialinvoke $stack4.<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection2$1)>(null), Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>, Stmt(line:18) this := @this: target.exercise2and3.FieldSQLInjection2, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: void <init>()>, Stmt(line:30) this.<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: java.lang.String userInput> = "noUserInput", Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>, Stmt(line:-1) $stack10 := @caughtexception, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:13) $stack4.<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: java.lang.String userInput> = userId, Fact: userId
Method :<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>, Stmt(line:18) parameter := @parameter0: target.exercise2and3.FieldSQLInjection2$ObjectWithTaint, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection2$1)>, Stmt(line:29) specialinvoke this.<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: void <init>()>(), Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>, Stmt(line:24) conn#1 = $stack10, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>, Stmt(line:18) loaded = parameter.<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: java.lang.String userInput>, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) specialinvoke this.<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>($stack4), Fact: userId
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) specialinvoke this.<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>($stack4), Fact: FIELDBASED <target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: java.lang.String userInput>
Method :<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>, Stmt(line:25) $stack11 = <java.lang.System: java.io.PrintStream out>, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>, Stmt(line:22) $stack6 = new java.lang.StringBuilder, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) specialinvoke this.<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>($stack4), Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>, Stmt(line:26) goto, Fact: <ZERO>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) specialinvoke this.<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>($stack4), Fact: userId
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:14) specialinvoke this.<target.exercise2and3.FieldSQLInjection2: void createQuery(target.exercise2and3.FieldSQLInjection2$ObjectWithTaint)>($stack4), Fact: FIELDBASED <target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: java.lang.String userInput>
Method :<target.exercise2and3.FieldSQLInjection2: void doGet(target.exercise1.HttpServletRequest)>, Stmt(line:12) specialinvoke $stack4.<target.exercise2and3.FieldSQLInjection2$ObjectWithTaint: void <init>(target.exercise2and3.FieldSQLInjection2$1)>(null), Fact: userId
]]></system-out>
  </testcase>
</testsuite>